[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"


[project]
name = "aa_pbs_exporter"
description = "Convert AA PBS pairing package .pdf to .json"
# readme = "README.rst"
requires-python = ">=3.10"
keywords = ["Python", "aa_pbs_exporter"]
license = { file = "LICENSE" }
authors = [{ name = "Chad Lowe" }, { email = "pfmsoft.dev@gmail.com" }]
# 
# urls = { Home-page = "https://github.com/DonalChilde/aa_pbs_exporter" }
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "click",
    "pdfminer.six",
    "pyparsing",
    "airportsdata",
    "pydantic",
]
version = "0.0.1"

[project.urls]
Documentation = "https://github.com/DonalChilde/aa_pbs_exporter#readme"
Documentation_rtd = "https://aa_pbs_exporter.readthedocs.io"
Issues = "https://github.com/DonalChilde/aa_pbs_exporter/issues"
Source = "https://github.com/DonalChilde/aa_pbs_exporter"

[project.scripts]
aa-pbs-exporter = "aa_pbs_exporter.cli.cli_main:cli"

[project.optional-dependencies]
dev = [

    # Automation
    "nox",
    "pre-commit",

    # Formatting
    "black",
    "isort",

    # Tools
    "scriv",

]
lint = ["pylint", "mypy"]
doc = [
    # Documentation
    "Sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "myst-parser",
    "sphinx-click",
]
vscode = ["esbonio"]
testing = [
    "pytest",
    "coverage[toml]",
    "pygments",
    "pytest-cov",
    "pysnooper",
    "devtools",
]


[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pylint.format]
# for black compatability
max-line-length = "92"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"


[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
# omit the snippets directory, as they are often included without tests.
omit = ["*/snippets/*"]
# # fail_under = 100

[tool.coverage.html]
directory = "htmlcov"

[tool.scriv]
version = "literal: pyproject.toml: project.version"
format = "md"
md_header_level = "2"
entry_title_template = "file: changelog.d/templates/entry_title_template.md.j2"
new_fragment_template = "file: changelog.d/templates/new_fragment.${config:format}.j2"
